<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function($rootScope, $scope, spUtil) {
	/* widget controller */
	var c = this;
	// Use a position indicator to know which record to update
	c.notePos = 0;
	c.data.selectedNote = {};
	//c.data.notes = [];
	c.data.isShow = false;

	// Subscribe to event.  Set the new title and note values on the 
	// c.data object
	$rootScope.$on('updateNoteObj', function(event,data) {
		c.snRefreshList();
	});

	$rootScope.$on('showNoteList', function (event, noteList){
		c.data.notes = noteList;
		c.options.title = $rootScope.categoryName.toString(); // Not working
	});

	$rootScope.$on('toggleNoteList', function (event, isShow){
		// Show this widget
		c.data.isShow = isShow;
	});

	$rootScope.$on('deleteNote', function(event, noteSysId) {
		// Remove Note on list
		c.data.notes = $.grep(c.data.notes, function(item) { 
			return item.sys_id !== noteSysId;
		});
		// Refresh count Note on Category
		$rootScope.$emit('updateNumberOfNote', c.data.notes.length);
	});

	$rootScope.$on('refreshList', function (event){
		c.data.notes = null;
	});

	c.selectItem = function(selectedNote) { 
		// Hide this widget
		c.data.isShow = false;

		// Set the position indicator to the index value passed in on select
		c.data.selectedNote = selectedNote;
		var id = selectedNote.sys_id;
		$rootScope.noteID = id;
		$rootScope.$emit('selectNote', id);
		// Empty Category Detail
		$rootScope.$emit('showCategoryDetail', null);
	}

	c.newNote = function() {
		c.server.get({
			action: 'newNote',
			categoryId : $rootScope.categoryId
		}).then(function(r) {
			c.data.notes.unshift(r.data.newNote);
			c.data.noteID = r.data.noteID;
			c.data.selectedNote = r.data.newNote;
			$rootScope.noteID = c.data.noteID;
			//$rootScope.$emit('selectNote', c.data.noteID);
			// Refresh count Note on Category
			$rootScope.$emit('updateNumberOfNote', c.data.notes.length);
		});
	}
	
	c.snRefreshList = function(){
		c.server.get({
			action: 'snRefreshList',
			cateId: $rootScope.categoryId
		}).then(function(r){
			c.data.notes = r.data.notes;
		});
	}

	c.snNoteUpdate = function(name){
		for (var i = 0; i < c.data.notes.length; i++){
			if (c.data.notes[i].sys_id == name.data.sys_id){
				if (name.data.record.note_details) c.data.notes[i].note_details = name.data.record.note_details.display_value;
				if (name.data.record.note_title) c.data.notes[i].note_title = name.data.record.note_title.display_value;
				c.server.update();
			}
		}
	}

	c.snNoteDelete = function(sysId){
		c.server.get({
			action: 'snDeleteNote',
			noteId:	sysId,
			cateId: $rootScope.categoryId
		}).then(function(r){
			c.data.notes = r.data.notes;
		});
	}

	c.updateNotePopup = function(){
		c.server.get({
			action: 'updateNoteDetail',
			noteSysId: c.data.selectedNote.sys_id,
			noteTitle: c.data.selectedNote.note_title,
			noteDetails: c.data.selectedNote.note_details
		});
	}

	spUtil.recordWatch($scope, "x_snc_createnotes_qt_note", "numberSTARTSWITHQT", function(name) {
		console.log(name.data.operation);
		if (name.data.operation == "insert"){
			c.snRefreshList();
		}
		if (name.data.operation == "update"){
			c.snNoteUpdate(name);
		}
		if (name.data.operation == "delete"){
			c.snNoteDelete(name.data.sys_id);
		}
	});
}
]]></client_script>
        <controller_as>c</controller_as>
        <css>h3.panel-title {
  font-size:20px;
  padding-top:5px;
}
#modal-note-body {
    resize: none;
}
.qt-h{
  margin-top: 10px;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>notes_list</id>
        <internal>false</internal>
        <link/>
        <name>Notes List</name>
        <option_schema>[{"hint":"Specify a title for the Notes LÃ­t widget","name":"title","default_value":"Notes","label":"Title","type":"string"},{"hint":"Select the maximum number of records to display","name":"maximum_records_to_display","default_value":"5","label":"Maximum records to display","type":"choice","choices":[{"label":"2","value":"2"},{"label":"3","value":"3"},{"label":"5","value":"5"},{"label":"7","value":"7"},{"label":"11","value":"11"},{"label":"13","value":"13"},{"label":"17","value":"17"}]}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	if (input) {
		data.notes = [];
		if (input.action == 'newNote') {
			var newNote = new GlideRecord('x_snc_createnotes_qt_note');
			newNote.newRecord();
			newNote.category = input.categoryId;
			var id = newNote.insert();
			data.noteID = id;
			data.newNote = {};
			$sp.getRecordValues(data.newNote, newNote, "note_title, note_details, sys_id, category");
		}		
		if (input.action == 'snRefreshList'){
			data.notes = getListNote(input.cateId);
		}
		if(input.action == 'snDeleteNote'){
			var deleteNote = new GlideRecord('x_snc_createnotes_qt_note');
			if(deleteNote.get(input.noteId)){
				deleteNote.deleteRecord();
			}
			data.notes = getListNote(input.cateId);
		}
		if (input.action == 'updateNoteDetail'){
			var noteRecord = new GlideRecord('x_snc_createnotes_qt_note');
			if(noteRecord.get(input.noteSysId)){
				data.note = {};
				noteRecord.note_title = input.noteTitle;
				noteRecord.note_details = input.noteDetails;
				noteRecord.update();
				$sp.getRecordValues(data.note, noteRecord, "note_title, note_details, sys_id, category");
			}
		}
	}
}
)();

// get list notes by Category sys_Id
function getListNote(cateId){
	var listNote = [];
	var noteRecord = new GlideRecord("x_snc_createnotes_qt_note");
	noteRecord.addQuery('category', cateId);
	noteRecord.query();
	while (noteRecord.next()){
		var noteObj = {};
		$sp.getRecordDisplayValues(noteObj, noteRecord, 'note_title,note_details,category,sys_id');
		listNote.push(noteObj);
	}
	return listNote;
}]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-10-14 01:08:53</sys_created_on>
        <sys_id>296321a54f7d4f004e584b8d0210c7a9</sys_id>
        <sys_mod_count>250</sys_mod_count>
        <sys_name>Notes List</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_296321a54f7d4f004e584b8d0210c7a9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-05-29 10:30:19</sys_updated_on>
        <template><![CDATA[<div class="panel panel-primary" ng-show="c.data.isShow">
  <div class="panel-heading clearfix">
    <h3 class="panel-title pull-left">
      {{::c.options.title}}
    </h3>
    <button class="btn btn-default pull-right" ng-click="c.newNote()" data-toggle="modal" data-target="#myModal"> 
      <span class="glyphicon glyphicon-plus"></span> 
    </button>
  </div>
  <div class="panel-body"> 
    <input placeholder="Filter" class="form-control" ng-model="noteFilter" /> 
  </div>

  <div class="list-group">
    <a class="list-group-item" ng-click="c.selectItem(note)" 
       ng-repeat="note in data.notes | filter : {'note_title': noteFilter}">
      <h4 class="list-group-item-heading">
        {{note.note_title}}
      </h4>
      <p class="list-group-item-text">
        {{note.note_details}}
      </p>
    </a>
  </div>

  <!-- Modal -->
  <div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">    
      <!-- Modal content-->
      <div class="modal-content">

        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal">&times;</button>
          <h4 class="modal-title">Note body</h4>
        </div>

        <div class="modal-body">
          <input class="form-control" id="modal-note-title" ng-model="c.data.selectedNote.note_title" ng-model-options="{debounce: 300}"/>
          <div class="row">
            <div class="col-xs-12 qt-h"></div>
          </div>
          <textarea class="form-control" id="modal-note-body"  ng-model="c.data.selectedNote.note_details" ng-model-options="{debounce: 300}"></textarea>
        </div>

        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal" ng-click="c.updateNotePopup()">OK</button>
        </div>

      </div>      
    </div>
  </div> 
</div>]]></template>
    </sp_widget>
</record_update>
