<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function($scope,$rootScope, spModal, spUtil) {
	/* widget controller */
	var c = this;
	// Init isShow value
	c.data.isShow = false;
	
	$rootScope.$on('selectNote', function(event,data) {
		c.server.get({
			action: 'getNote',
			noteID: $rootScope.noteID
		}).then(function(r) {
			c.data.note_title = r.data.note.note_title;
			c.data.note_details = r.data.note.note_details;
			c.data.noteId = r.data.note.sys_id;
			c.data.category = r.data.note.categoryName;
			// Show this widget 
			c.data.isShow = true;
		});
	});

	$rootScope.$on('toggleNoteDetail', function(event, data) {
		c.data.isShow = data;
	});

	c.updateNote = function(updateType) {
		c.server.get({
			action: 'updateNote',
			noteID: c.data.noteId,
			note: {
				title: c.data.note_title, 
				details: c.data.note_details
			}
		}).then(function(r) {
			// When the promise is returned, emit the change
			if (updateType == 'title' || updateType == 'body') {
				$rootScope.$emit('updateNoteObj', r.data); 
			}
		});
	}
	c.deleteNote = function() {
		var noteTitle = c.data.note_title;
		c.server.get({
			action: 'deleteNote',
			noteID: c.data.noteId
		}).then(function(r) {
			// Hide this widget 
			c.data.isShow = false;
			$rootScope.$emit('deleteNote', c.data.noteId);
			c.data.note_title = '';
			c.data.note_details = '';
			c.data.noteId = '';
			// Show message
			spUtil.addInfoMessage("The " + noteTitle + " record has been deleted.");
			c.backToList();
		});
	}
	c.confirmDelete = function(){
		spModal.confirm("Are you sure want to delete this Note Record?").then(function(confirmed){
			if (confirmed){
				c.deleteNote();				
			}
		});
	}
	
	c.backToList = function(){
		// true: Show Note list
			$rootScope.$emit('toggleNoteList', true);
			// false: Hide Category details
			c.data.isShow = false;
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>h3.panel-title {
  font-size:20px;
  padding-top:5px;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>notes_body</id>
        <internal>false</internal>
        <link/>
        <name>Notes Body</name>
        <option_schema>[]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	if (input && input.noteID) {
		var note = new GlideRecord('x_snc_createnotes_qt_note');
		if (note.get(input.noteID)) {
			if (input.action == 'getNote') {
				data.note = {};
				$sp.getRecordValues(data.note, note, "note_title, note_details, sys_id, category");
				data.note.categoryName = getCategoryName(data.note.category);
			}
			else if (input.action == 'updateNote') { 
				//note.note_title = input.noteTitle; 
				//note.note_details = input.noteBody; 
				note.note_title = input.note.title; 
				note.note_details = input.note.details; 
				note.update(); 
				// Need to update the data object with the new title
				// and first 20 characters of the note (do not want to write huge
				// strings to the Notes List widget)
				data.note_title = note.note_title.toString();
				data.note_details = note.note_details.slice(0,20).toString();
			}

			else if (input.action == 'deleteNote') { 
				note.deleteRecord();
			}
		}
	}
})();

function getCategoryName(sysId){
	var categoryList = new GlideRecord('x_snc_createnotes_category');
	categoryList.addQuery('sys_id', sysId);
	categoryList.orderByDesc('sys_created_on');
	//noteGR.setLimit(options.maximum_records_to_display);
	categoryList.query();
	var name = "";
	while(categoryList.next()){
		name = categoryList.category_name;
	}
	return name.toString();
}]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-10-14 01:17:32</sys_created_on>
        <sys_id>d06529694f7d4f004e584b8d0210c7b7</sys_id>
        <sys_mod_count>179</sys_mod_count>
        <sys_name>Notes Body</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_d06529694f7d4f004e584b8d0210c7b7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-05-24 03:10:29</sys_updated_on>
        <template><![CDATA[<div class="panel panel-primary" ng-show="c.data.isShow">
  <div class="panel-heading clearfix">
    <div class="row">
      <div class="col-md-1">
        <button class="btn btn-default" ng-click="c.backToList()">
          <span class="glyphicon glyphicon-chevron-left"></span> 
        </button>
      </div>
      <div class="col-md-11">
        <h3 class="panel-title">
          {{c.data.category}}
        </h3>
      </div>
    </div>
  </div>
  
  <div class="panel-body clearfix">
    <div class="row">
      <div class="col-md-11">
        <input class="form-control" id="note-title" ng-model="c.data.note_title" ng-change="c.updateNote('title')" ng-model-options="{debounce: 300}"/>
      </div>
      <delete-button-confirm></delete-button-confirm>
    </div>
  </div>
  <div class="panel-body">
    <textarea class="form-control" id="note-body" ng-model="c.data.note_details" ng-change="c.updateNote('body')" ng-model-options="{debounce: 300}"></textarea>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
